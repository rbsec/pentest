#!/usr/bin/env python3
import os
import platform
import re
import subprocess
import sys

# Attempt to determine the type of a hash by trying to crack it with every format John supports
# Useful when you have a hash with an unknown format, or aren't sure how a salt is being used
# This approach is slower than guessing based on length/characters, but more reliable
# Works best when you have a known password for the hash
# Defaults to 120s max per hash type

# Usage: $ format_tester.py <hashfile> <wordlist> [runtime]


# Class for coloured output
class col:
    if sys.stdout.isatty() and platform.system() != "Windows":
        green = '\033[32m'
        blue = '\033[94m'
        red = '\033[31m'
        brown = '\033[33m'
        grey = '\033[90m'
        end = '\033[0m'
    else:   # Colours mess up redirected or Windows output, disable them
        green = ""
        blue = ""
        red = ""
        brown = ""
        grey = ""
        end = ""

# Arguments
if len(sys.argv) < 3:
    print(f"\n{col.red}Usage: {sys.argv[0]} <hashfile> <wordlist> [runtime]{col.end}\n")
    sys.exit(1)
hashfile = sys.argv[1]
wordlist = sys.argv[2]

if len(sys.argv) == 4:
    runtime = str(sys.argv[3])
else:
    runtime = "120"

if not os.path.isfile(hashfile):
    print(f"{col.red}Hash file does not exist{col.end}")
    sys.exit(1)

if not os.path.isfile(wordlist):
    print(f"{col.red}Wordlist does not exist{col.end}")
    sys.exit(1)

# Get a list of formats
flist = subprocess.check_output(["john", "--list=formats"]).decode('utf-8').replace("\n", "").replace(" ", "")
formats = flist.split(",")

# Get a list of subformats
sflist = subprocess.check_output(["john", "--list=subformats"]).decode('utf-8').replace("\n", "").replace(" ", "")
subformats = re.findall("(dynamic_\d+)", sflist)
formats.extend(subformats)

total = len(formats)
i = 1

# Get rid of the old pot if it exists
try:
    os.remove("format_tester.pot")
except OSError:
    pass

# Loop through formats
for format in formats:
    print(f"{col.blue}[{str(i)}/{str(total)}]{col.end} Trying format: {col.brown}{format}{col.end}")
    subprocess.call([
        "john",
        hashfile,
        "--wordlist=" + wordlist,
        "--format=" + format,
        "--rules=none",
        "--pot=format_tester.pot",
        "--max-run-time=" + str(runtime)
        ])
    try:
        if os.stat("format_tester.pot").st_size > 0:
            print(f"\n{col.green}Hash type is {format}{col.end}\n")
            os.remove("format_tester.pot")
            sys.exit(0)
    except OSError:
        pass
    i += 1
